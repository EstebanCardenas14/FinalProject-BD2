--------------------------------------------------------------
// Traer todos los proveedores con su id y usuario id
SELECT v.proveedor_id, o.nombres, o.apellidos, o.usuario_id
FROM proveedor v
INNER JOIN usuario o
on v.usuario_id = o.usuario_id
--------------------------------------------------------------
//Traer productos con titulo, imagen, descripcion, marca, proveedor
SELECT producto.titulo, producto.imagen ,producto.descripcion, marca.nombre, proveedor.proveedor_id ,usuario.nombres, usuario.apellidos
FROM producto
INNER JOIN marca ON producto.marca_id = producto.marca_id
LEFT JOIN proveedor ON producto.proveedor_id = proveedor.proveedor_id
INNER JOIN usuario ON proveedor.usuario_id = usuario.usuario_id
--------------------------------------------------------------
//Neo4j
MATCH (p:PERSON)-[:LIVES]->(c:CITY) 
WITH p,count(c) as rels, collect(c) as cities
WHERE rels > 1
RETURN p,cities, rels
--------------------------------------------------------------
//Traer relaciones y usuarios en Neo4j
MATCH (ee:Person)-[:DIRECTED]-(mov)
WHERE ee.name = 'Andy Wachowski' RETURN ee, mov
--------------------------------------------------------------
MATCH (ee:Person)-[:KNOWS]-(friends)
WHERE ee.name = 'Emil' RETURN ee, friends
//-----------------------------------------
//Traer las variantes con sus fotos
SELECT v.descripcion, o.imagen, v.caracteristicas, v.stock
FROM variante v
INNER JOIN foto_variante o
on v.variante_id = o.variante_id
where v.producto_id = 1;